{"meta":{"title":"hi coder","subtitle":"qiqi's blog","description":"qiqi's blog","author":"Qiqi Shi","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于我","date":"2019-10-16T09:54:59.964Z","updated":"2019-10-16T09:54:59.964Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"博主信息 名字：石起起 网名：东南有大树 籍贯：山西 现居地：北京 座右铭：纸上得来终觉浅，绝知此事要躬行 编程领域 主攻[c#, python, .net框架, sklearn] 涉及领域[numpy, pandas, matplotlib, seaborn, pyecharts, winform, asp.net, sqlserver, mysql, mongodb, html/css, js/jq，tensor flow，scrapy, django]等 Email: mrshiqiqi@126.com; sqqlove123@163.com Github：https://github.com/mrshiqiqi; https://github.com/helloshiqiqi 聚宽：https://www.joinquant.com/user/64aced37dc87aa2df1556c4096fc4aaf 简书：https://www.jianshu.com/u/0d1529446abc"},{"title":"所有分类","date":"2019-10-15T15:14:27.440Z","updated":"2019-10-15T15:14:27.440Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2019-10-15T15:15:28.389Z","updated":"2019-10-15T15:15:28.389Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-10-15T15:16:43.155Z","updated":"2019-10-15T15:16:43.155Z","comments":true,"path":"mylist/index.html","permalink":"http://yoursite.com/mylist/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2019-10-15T15:29:00.612Z","updated":"2019-10-15T15:29:00.612Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":"这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"404 Not Found","date":"2019-10-15T15:17:39.095Z","updated":"2019-10-15T15:17:39.095Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":"404 Not Found **很抱歉，您访问的页面不存在** 可能是输入地址有误或该地址已被删除"}],"posts":[{"title":"什么是 Scrum","slug":"什么是Scrum","date":"2019-10-16T07:50:23.000Z","updated":"2019-10-16T07:45:20.712Z","comments":true,"path":"2019/10/16/什么是Scrum/","link":"","permalink":"http://yoursite.com/2019/10/16/什么是Scrum/","excerpt":"","text":"什么是SCRUM Scrum 是用于开发、交付和持续支持复杂产品的一个框架，是一个增量的、迭代的开发过程。在这个框架中，整个开发过程由若干个短的迭代周期组成，一个短的迭代周期称为一个Sprint，每个Sprint的建议长度是一至四周。在Scrum中，使用产品Backlog来管理产品的需求，产品backlog是一个按照商业价值排序的需求列表，列表条目的体现形式通常为用户故事。Scrum团队总是先开发对客户具有较高价值的需求。在Sprint中，Scrum团队从产品Backlog中挑选最高优先级的需求进行开发。挑选的需求在Sprint计划会议上经过讨论、分析和估算得到相应的任务列表，我们称它为Sprint backlog。在每个迭代结束时，Scrum团队将递交潜在可交付的产品增量。 Scrum起源于软件开发项目，但它适用于任何复杂的或是创新性的项目。Scrum 目前已被用于开发软件、硬件、嵌入式软件、交互功能网络、自动驾驶、学校、政府、市场、管理组织运营，以及几乎我们（作为个体和群体）日常生活中所使用的一切。 Scrum流程如下图： Scrum的历史1986年，竹内弘高和野中郁次郎阐述了一种新的整体性的方法 ，该方法能够提高商业新产品开发的速度和灵活性：他们将这种新的整体性方法与橄榄球相比较，前者各阶段相互重叠，并且由一个跨职能团队在不同的阶段完成整个过程，而团队“作为一个整体前进，把球传来传去”；他们对来自汽车，照片机器，计算机和打印机等产业的案例进行了研究。 1991年，DeGrace和Stahl在《Wicked Problems, Righteous Solutions》一书中将这种方法称为scrum，在竹内弘高和野中郁次郎的文章中提到的橄榄球术语。 1990年代初，Ken Schwaber在其公司使用了一种方法Advanced Development Methods（先进开发方法），这种方法后来发展为Scrum。 1993，Jeff Sutherland 在Easel公司开发了一种类似的方法，并首次称之为Scrum。 1995年，在奥斯汀举办的OOPSLA ’95上，Jeff Sutherland 和Ken Schwaber联合发表了论文首次提出了Scrum概念。Ken Schwaber和Jeff Sutherland 在接下的几年里合作，将上述的文章，他们的经验，以及业界的最佳实践融合起来，形成我们现在所知的Scrum。 2001年，Ken Schwaber与Mike Beedle合著了《敏捷软件开发-使用Scrum过程》一书，介绍了Scrum方法。 2001年，Jeff Sutherland和Ken Schwaber参与了犹他州的17人聚会，参与发布了《敏捷宣言和十二原则》。 2002年，Ken Schwaber和Mike Cohn创办了Scrum Alliance。 SCRUM框架Scrum框架包括3个角色、3个工件、5个事件、5个价值： 3个角色 产品负责人（Product Owner）： Scrum Master 开发团队 3个工件 产品Backlog（Product Backlog） SprintBacklog 产品增量（Increment） 5个事件 Sprint（Sprint本身是一个事件，包括了如下4个事件） Sprint计划会议（Sprint Planning Meeting） 每日站会（Daily Scrum Meeting） Sprint评审会议（Sprint Review Meeting） Sprint回顾会议（Sprint Retrospective Meeting） 5个价值 承诺 – 愿意对目标做出承诺 专注– 把你的心思和能力都用到你承诺的工作上去 开放– Scrum 把项目中的一切开放给每个人看 尊重– 每个人都有他独特的背景和经验 勇气– 有勇气做出承诺，履行承诺，接受别人的尊重 SCRUM理论基础Scrum以经验性过程控制理论（经验主义）做为理论基础的过程。经验主义主张知识源于经验, 以及基于已知的东西做决定。Scrum 采用迭代、增量的方法来优化可预见性并控制风险。Scrum 的三大支柱支撑起每个经验性过程控制的实现:透明性、检验和适应。Scrum的三大支柱如下： 第一：透明性（Transparency）透明度是指，在软件开发过程的各个环节保持高度的可见性，影响交付成果的各个方面对于参与交付的所有人、管理生产结果的人保持透明。管理生产成果的人不仅要能够看到过程的这些方面，而且必须理解他们看到的内容。也就是说，当某个人在检验一个过程，并确信某一个任务已经完成时，这个完成必须等同于他们对完成的定义。 第二：检验（Inspection）开发过程中的各方面必须做到足够频繁地检验，确保能够及时发现过程中的重大偏差。在确定检验频率时，需要考虑到检验会引起所有过程发生变化。当规定的检验频率超出了过程检验所能容许的程度，那么就会出现问题。幸运的是，软件开发并不会出现这种情况。另一个因素就是检验工作成果人员的技能水平和积极性。 第三：适应（Adaptation）如果检验人员检验的时候发现过程中的一个或多个方面不满足验收标准，并且最终产品是不合格的，那么便需要对过程或是材料进行调整。调整工作必须尽快实施，以减少进一步的偏差。 Scrum中通过三个活动进行检验和适应：每日例会检验Sprint目标的进展，做出调整，从而优化次日的工作价值；Sprint评审和计划会议检验发布目标的进展，做出调整，从而优化下一个Sprint的工作价值；Sprint回顾会议是用来回顾已经完成的Sprint，并且确定做出什么样的改善可以使接下来的Sprint更加高效、更加令人满意，并且工作更快乐。 本文参考自Scrum中文网","categories":[{"name":"敏捷","slug":"敏捷","permalink":"http://yoursite.com/categories/敏捷/"}],"tags":[{"name":"管理","slug":"管理","permalink":"http://yoursite.com/tags/管理/"},{"name":"scrum","slug":"scrum","permalink":"http://yoursite.com/tags/scrum/"},{"name":"敏捷","slug":"敏捷","permalink":"http://yoursite.com/tags/敏捷/"}]},{"title":"敏捷宣言与原则","slug":"敏捷宣言与原则","date":"2019-10-16T01:50:23.000Z","updated":"2019-10-16T07:55:35.333Z","comments":true,"path":"2019/10/16/敏捷宣言与原则/","link":"","permalink":"http://yoursite.com/2019/10/16/敏捷宣言与原则/","excerpt":"","text":"参见官网 敏捷软件开发宣言我们一直在实践中探寻更好的软件开发方法，身体力行，同时也帮助他人。由此我们建立了如下价值观： 个体和互动 高于 流程和工具 工作的软件 高于 详尽的文档 客户合作 高于 合同谈判 响应变化 高于 遵循计划 也就是说，尽管右项有其价值，我们更重视左项的价值。 敏捷开发十二原则我们遵循以下原则： 我们最重要的目标，是通过及早和持续不断地交付有价值的软件使客户满意。 欣然面对需求变化，即使在开发后期也一样。为了客户的竞争优势，敏捷过程掌控变化。 经常地交付可工作的软件，相隔几星期或一两个月，倾向于采取较短的周期。 业务人员和开发人员必须相互合作，项目中的每一天都不例外。 激发个体的斗志，以他们为核心搭建项目。提供所需的环境和支援，辅以信任，从而达成目标。 不论团队内外，传递信息效果最好效率也最高的方式是面对面的交谈。 可工作的软件是进度的首要度量标准。 敏捷过程倡导可持续开发。责任人、开发人员和用户要能够共同维持其步调稳定延续。 坚持不懈地追求技术卓越和良好设计，敏捷能力由此增强。 以简洁为本，它是极力减少不必要工作量的艺术。 最好的架构、需求和设计出自自组织团队。 团队定期地反思如何能提高成效，并依此调整自身的行为表现。 敏捷宣言的17位作者Kent BeckMike BeedleArie van BennekumAlistair CockburnWard CunninghamMartin FowlerJames GrenningJim HighsmithAndrew HuntRon JeffriesJon KernBrian MarickRobert C. MartinSteve MellorKen SchwaberJeff SutherlandDave Thomas","categories":[{"name":"敏捷","slug":"敏捷","permalink":"http://yoursite.com/categories/敏捷/"}],"tags":[{"name":"敏捷宣言","slug":"敏捷宣言","permalink":"http://yoursite.com/tags/敏捷宣言/"},{"name":"十二原则","slug":"十二原则","permalink":"http://yoursite.com/tags/十二原则/"}]},{"title":"北京线下活动-个人管理与精进","slug":"线下活动","date":"2019-10-12T07:50:23.000Z","updated":"2019-10-24T06:13:05.721Z","comments":true,"path":"2019/10/12/线下活动/","link":"","permalink":"http://yoursite.com/2019/10/12/线下活动/","excerpt":"","text":"活动大纲活动主题：个人管理与精进活动时间：2019年10月13日14时活动地址：昆山秋水参会人员数量：30人组织人员：石起起、杨生、崔鑫赞助方：光环国际学校活动流程： 12:30 ~ 13:30 设备调试与彩排 13:30 ~ 14:00 签到 14:00 ~ 14:20 互相认识，然后划分小组 14:20 ~ 16:40 主题分支讨论 16:40 ~ 17:00 合影留念，散会 活动说明本次活动有6个子主题，计划将30人分为敏捷的5人小组，依次对题目发起讨论。讨论完成后，小组推荐一位代表上台表达对主题的理解与经验分享，并挑选一到两名其它小组成员进行互动。 在活动过程中，将采集大家的精彩议论与有趣图片，在此博文中更新。 6个主题 如何管理时间 如何规划财务 如何处理关系 如何平衡生活 如何高效工作 如何管理健康 活动PPT展示戳我查看PPT 精彩活动记录刚开始的时候，大家各坐在自己的座位上，都在默默的刷手机。直到音乐停下来。在杨生的帮助下，大家错落分开，划分为五个小组。真是感谢这些冒着雨水跑来的小伙伴们。（其实都是大佬~） 通过抽签，各小组拿到了属于自己小组的讨论主题。好像火柴被猛烈的划过，大家的热情一下子燃烧起来。讨论声、笑声此起彼伏。 第一位上场的大哥很霸气，分享的知识是关于时间管理方面的。从他的身上，让人感受到了运筹帷幄的控制感。他说话很幽默，而且笑容真的很亲善。 由于时间有限，并且只划分了五个小组，抽签的时候，第二个主题没有被抽走。所以直接跳到第三个话题。 这是个十分谦虚的美女。活动过程中，她向大家请教过很多问题，可当她上台后，我们被她的气场完全hold住了。用一个词来形容她就是——学霸。她分享的主题内容简直可以载入教科书。 分享第四个主题的美女真的是帮了我们的大忙了。她是最早来的女生，然后开始帮助我们整理会场，负责签到。（感谢啦~） 从她的分享内容与会场表现来看，她那小小的身躯里有着无比强大的自律精神。非常值得我们学习。 分享第五个主题的小伙为了我们提出了两个个人事务管理、高效工作的方法与工具：GTD和番茄工作法。会后也积极与我联系，表达了他对这两种工作方式的浓厚兴趣。如果有对此方法感兴趣的学友，可以找这位帅哥聊聊哦！ 最后上场的这们美女有点怯场，但她还是勇敢的走到了台前。很棒，你是最值得我们点赞的一位，加油！ 17点的时候，我们准时结束了活动，大家一起合影，然后各奔东西。这个世界，就是这样，有时候很大，有时候很小。愿各位生活一切顺利。 ps: 最后还要感谢崔鑫同学，她是光环的工作人员，背后一直是她在默默替这场活动做协调。敬最可爱的人！ \b","categories":[{"name":"管理","slug":"管理","permalink":"http://yoursite.com/categories/管理/"}],"tags":[{"name":"pmp","slug":"pmp","permalink":"http://yoursite.com/tags/pmp/"},{"name":"线下活动","slug":"线下活动","permalink":"http://yoursite.com/tags/线下活动/"}]},{"title":"量化投资入门指南-视频教程","slug":"量化投资入门指南","date":"2019-10-10T12:00:00.000Z","updated":"2019-10-16T07:35:42.384Z","comments":true,"path":"2019/10/10/量化投资入门指南/","link":"","permalink":"http://yoursite.com/2019/10/10/量化投资入门指南/","excerpt":"","text":"课程链接-网易云课堂 适用人群量化交易入门者。 课程概述没有Python基础，没有量化概念，都不是问题，本课程是专门为编程零基础、量化交易零基础者而打造。利用当下最火热的编程语言Python，对证券标的的价格信息进行分析处理，一步一步完成策略的编写！ \b","categories":[],"tags":[{"name":"quant","slug":"quant","permalink":"http://yoursite.com/tags/quant/"}]},{"title":"TA-LIB K线形态识别与验证","slug":"K线形态识别与验证","date":"2019-10-01T01:50:23.000Z","updated":"2019-10-16T10:06:11.713Z","comments":true,"path":"2019/10/01/K线形态识别与验证/","link":"","permalink":"http://yoursite.com/2019/10/01/K线形态识别与验证/","excerpt":"","text":"数据来源：jqdata 123456789# 导入必备模块import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport datetime as dtimport talib as tb # 当前重点库 TA-LIBimport seaborn as snsfrom jqdata import *sns.set() 123456789101112131415161718192021222324252627### 定义形态查寻函数def find_pattern(function): '''从全市场中“随机”的挑选标的，快速的找到一个符合形态的标的与对应时间 Args: function: ta-lib 库中的一个方法 Return: 返回(stock, date) ''' # 打乱全市场标的顺序 stock_list = get_all_securities().index.tolist() np.random.shuffle(stock_list) # 构造时间序列的结点，从10天之前的时间序列查找 trade_date = get_trade_days(end_date=dt.datetime.now(), count=15) check_date = trade_date[-10] for stock in stock_list: try: price = get_price(stock, end_date=check_date, count=244 * 5) signal = function(price['open'], price['high'], price['low'], price['close']) signal = signal[signal != 0] if len(signal) &gt; 0: return stock, signal.index[0] except: continue 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# k 线刻画数据处理def get_k_value(pattern, count): '''将开、高、低、收价格数据进行处理，以支持K线图展示 Args: pattern: 形态函数返回的标的与时间元组 count: 形态数量 Return: 返回处理后的价格数据，类型为df ''' # 获取21个价格序列值，并且让形态时间大致处于中间 security = pattern[0] check_date = pattern[1] pattern_date = get_trade_days(end_date=check_date, count=count) orther_count = (21 - count) // 2 trade_date = get_trade_days(start_date=check_date, end_date=dt.datetime.now()) end_date = trade_date[9] price = get_price(security, end_date=end_date, count=21)[['open', 'high', 'low', 'close']] y_list = &#123;'y1': [], 'y2': [], 'y3': [], 'y4': [], 'c': [], 'al': []&#125; # 数据处理 for i in range(price.shape[0]): # 计算各bar的透明度 if price.index[i].date() in pattern_date: y_list['al'].append(1) else: y_list['al'].append(0.2) # 计算各实体的长度 if price.open[i] &gt; price.close[i]: y_list['y1'].append(price.close[i]) y_list['y2'].append(price.open[i] - price.close[i]) y_list['c'].append('g') else: y_list['y1'].append(price.open[i]) y_list['y2'].append(price.close[i] - price.open[i]) y_list['c'].append('r') # 计算各影线的长度 if price.high[i] &gt; price.low[i]: y_list['y3'].append(price.low[i]) y_list['y4'].append(price.high[i] - price.low[i]) else: y_list['y3'].append(price.high[i]) y_list['y4'].append(price.low[i] - price.high[i]) for name, value in y_list.items(): price.loc[:, name] = value return price 1234567891011121314151617181920212223242526272829303132333435363738# k 线形态刻画 def show_bar(data, title='None'): '''将价格数据按实体与影线进行组合 Args: data: 处理好的价格数据，df类型 title: 图片标题，可选 Return: None ''' # 整合 x 轴与 y 轴数据 x = [str(date.date()) for date in data.index] y1 = data['y1'] y2 = data['y2'] y3 = data['y3'] y4 = data['y4'] fig = plt.figure(figsize=(18, 5)) # 画影线，要求对应不同的颜色与透明度 for i in range(len(data)): plt.bar(x[i], y3[i], align='center', alpha=0) plt.bar(x[i], y4[i], align='center', color=data['c'][i], alpha=data['al'][i], bottom=y3[i], width=0.1) # 画实体，要求对应不同的颜色与透明度 for j in range(len(data)): plt.bar(x[j], y1[j], align='center', alpha=0) plt.bar(x[j], y2[j], align='center', color=data['c'][j], alpha=data['al'][j], bottom=y1[j]) _min = data[['open', 'high', 'low', 'close']].min().min() - 0.1 _max = data[['open', 'high', 'low', 'close']].max().max() + 0.1 plt.ylim(_min, _max) plt.title(title) plt.xticks(rotation=45) plt.show() 12345678# 函数组合-形态检测def check_bar(fuc, bar_count): # 查询形态 pattern = find_pattern(fuc) # bar 数据处理 k_value = get_k_value(pattern, bar_count) # 形态查验 show_bar(k_value, pattern[0] + ': ' + fuc.__name__) CDL2CROWS - Two Crows 函数名：CDL2CROWS名称：Two Crows 两只乌鸦简介：三日K线模式，第一天长阳，第二天高开收阴，第三天再次高开继续收阴，收盘比前一日收盘价低，预示股价下跌integer = CDL2CROWS(open, high, low, close) 1check_bar(tb.CDL2CROWS, 3) CDL3BLACKCROWS - Three Black Crows 函数名：CDL3BLACKCROWS名称：Three Black Crows 三只乌鸦简介：三日K线模式，连续三根阴线，每日收盘价都下跌且接近最低价，每日开盘价都在上根K线实体内，预示股价下跌integer = CDL3BLACKCROWS(open, high, low, close) 1check_bar(tb.CDL3BLACKCROWS, 3) CDL3INSIDE - Three Inside Up/Down 函数名：CDL3INSIDE名称： Three Inside Up/Down 三内部上涨和下跌简介：三日K线模式，母子信号+长K线，以三内部上涨为例，K线为阴阳阳，第三天收盘价高于第一天开盘价，第二天K线在第一天K线内部，预示着股价上涨integer = CDL3INSIDE(open, high, low, close) 1check_bar(tb.CDL3INSIDE, 3) CDL3LINESTRIKE - Three-Line Strike 函数名：CDL3LINESTRIKE名称： Three-Line Strike 三线打击简介：四日K线模式，前三根阳线，每日收盘价都比前一日高，开盘价在前一日实体内，第四日市场高开，收盘价低于第一日开盘价，预示股价下跌integer = CDL3LINESTRIKE(open, high, low, close) 1check_bar(tb.CDL3LINESTRIKE, 4) CDL3OUTSIDE - Three Outside Up/Down 函数名：CDL3OUTSIDE名称：Three Outside Up/Down 三外部上涨和下跌简介：三日K线模式，与三内部上涨和下跌类似，K线为阴阳阳，但第一日与第二日的K线形态相反，以三外部上涨为例，第一日K线在第二日K线内部，预示着股价上涨integer = CDL3OUTSIDE(open, high, low, close) 1check_bar(tb.CDL3OUTSIDE, 3) CDL3STARSINSOUTH - Three Stars In The South 函数名：CDL3STARSINSOUTH名称：Three Stars In The South 南方三星简介：三日K线模式，与大敌当前相反，三日K线皆阴，第一日有长下影线，第二日与第一日类似，K线整体小于第一日，第三日无下影线实体信号，成交价格都在第一日振幅之内，预示下跌趋势反转，股价上升integer = CDL3STARSINSOUTH(open, high, low, close) 1check_bar(tb.CDL3STARSINSOUTH, 3) CDL3WHITESOLDIERS - Three Advancing White Soldiers 函数名：CDL3WHITESOLDIERS名称：Three Advancing White Soldiers 三个白兵简介：三日K线模式，三日K线皆阳，每日收盘价变高且接近最高价，开盘价在前一日实体上半部，预示股价上升integer = CDL3WHITESOLDIERS(open, high, low, close) 1check_bar(tb.CDL3WHITESOLDIERS, 3) CDLABANDONEDBABY - Abandoned Baby 函数名：CDLABANDONEDBABY名称：Abandoned Baby 弃婴简介：三日K线模式，第二日价格跳空且收十字星（开盘价与收盘价接近，最高价最低价相差不大），预示趋势反转，发生在顶部下跌，底部上涨integer = CDLABANDONEDBABY(open, high, low, close, penetration=0) 1check_bar(tb.CDLABANDONEDBABY, 3) CDLADVANCEBLOCK - Advance Block 函数名：CDLADVANCEBLOCK名称：Advance Block 大敌当前简介：三日K线模式，三日都收阳，每日收盘价都比前一日高，开盘价都在前一日实体以内，实体变短，上影线变长integer = CDLADVANCEBLOCK(open, high, low, close) 1check_bar(tb.CDLADVANCEBLOCK, 3) CDLBELTHOLD - Belt-hold 函数名：CDLBELTHOLD名称：Belt-hold 捉腰带线简介：两日K线模式，下跌趋势中，第一日阴线，第二日开盘价为最低价，阳线，收盘价接近最高价，预示价格上涨integer = CDLBELTHOLD(open, high, low, close) 1check_bar(tb.CDLBELTHOLD, 2) CDLBREAKAWAY - Breakaway 函数名：CDLBREAKAWAY名称：Breakaway 脱离简介：五日K线模式，以看涨脱离为例，下跌趋势中，第一日长阴线，第二日跳空阴线，延续趋势开始震荡，第五日长阳线，收盘价在第一天收盘价与第二天开盘价之间，预示价格上涨integer = CDLBREAKAWAY(open, high, low, close) 1check_bar(tb.CDLBREAKAWAY, 5) CDLCLOSINGMARUBOZU - Closing Marubozu 函数名：CDLCLOSINGMARUBOZU名称：Closing Marubozu 收盘缺影线简介：一日K线模式，以阳线为例，最低价低于开盘价，收盘价等于最高价，预示着趋势持续integer = CDLCLOSINGMARUBOZU(open, high, low, close) 1check_bar(tb.CDLCLOSINGMARUBOZU, 1) CDLCONCEALBABYSWALL - Concealing Baby Swallow 函数名：CDLCONCEALBABYSWALL名称： Concealing Baby Swallow 藏婴吞没简介：四日K线模式，下跌趋势中，前两日阴线无影线，第二日开盘、收盘价皆低于第二日，第三日倒锤头，第四日开盘价高于前一日最高价，收盘价低于前一日最低价，预示着底部反转integer = CDLCONCEALBABYSWALL(open, high, low, close) 1check_bar(tb.CDLCONCEALBABYSWALL, 4) CDLCOUNTERATTACK - Counterattack 函数名：CDLCOUNTERATTACK名称：Counterattack 反击线简介：二日K线模式，与分离线类似integer = CDLCOUNTERATTACK(open, high, low, close) 1check_bar(tb.CDLCOUNTERATTACK, 2) CDLDARKCLOUDCOVER - Dark Cloud Cover 函数名：CDLDARKCLOUDCOVER名称：Dark Cloud Cover 乌云压顶简介：二日K线模式，第一日长阳，第二日开盘价高于前一日最高价，收盘价处于前一日实体中部以下，预示着股价下跌integer = CDLDARKCLOUDCOVER(open, high, low, close, penetration=0) 1check_bar(tb.CDLDARKCLOUDCOVER, 2) CDLDOJI - Doji 函数名：CDLDOJI名称：Doji 十字简介：一日K线模式，开盘价与收盘价基本相同integer = CDLDOJI(open, high, low, close) 1check_bar(tb.CDLDOJI, 1) CDLDOJISTAR - Doji Star 函数名：CDLDOJISTAR名称：Doji Star 十字星简介：一日K线模式，开盘价与收盘价基本相同，上下影线不会很长，预示着当前趋势反转integer = CDLDOJISTAR(open, high, low, close) 1check_bar(tb.CDLDOJISTAR, 1) CDLDRAGONFLYDOJI - Dragonfly Doji 函数名：CDLDRAGONFLYDOJI名称：Dragonfly Doji 蜻蜓十字/T形十字简介：一日K线模式，开盘后价格一路走低，之后收复，收盘价与开盘价相同，预示趋势反转integer = CDLDRAGONFLYDOJI(open, high, low, close) 1check_bar(tb.CDLDRAGONFLYDOJI, 1) CDLENGULFING - Engulfing Pattern 函数名：CDLENGULFING名称：Engulfing Pattern 吞噬模式简介：两日K线模式，分多头吞噬和空头吞噬，以多头吞噬为例，第一日为阴线，第二日阳线，第一日的开盘价和收盘价在第二日开盘价收盘价之内，但不能完全相同integer = CDLENGULFING(open, high, low, close) 1check_bar(tb.CDLENGULFING, 2) CDLEVENINGDOJISTAR - Evening Doji Star 函数名：CDLEVENINGDOJISTAR名称：Evening Doji Star 十字暮星简介：三日K线模式，基本模式为暮星，第二日收盘价和开盘价相同，预示顶部反转integer = CDLEVENINGDOJISTAR(open, high, low, close, penetration=0) 1check_bar(tb.CDLEVENINGDOJISTAR, 3) CDLEVENINGSTAR - Evening Star 函数名：CDLEVENINGSTAR名称：Evening Star 暮星简介：三日K线模式，与晨星相反，上升趋势中,第一日阳线，第二日价格振幅较小，第三日阴线，预示顶部反转integer = CDLEVENINGSTAR(open, high, low, close, penetration=0) 1check_bar(tb.CDLEVENINGSTAR, 3) CDLGAPSIDESIDEWHITE - Up/Down-gap side-by-side white lines 函数名：CDLGAPSIDESIDEWHITE名称：Up/Down-gap side-by-side white lines 向上/下跳空并列阳线简介：二日K线模式，上升趋势向上跳空，下跌趋势向下跳空,第一日与第二日有相同开盘价，实体长度差不多，则趋势持续integer = CDLGAPSIDESIDEWHITE(open, high, low, close) 1check_bar(tb.CDLGAPSIDESIDEWHITE, 2) CDLGRAVESTONEDOJI - Gravestone Doji 函数名：CDLGRAVESTONEDOJI名称：Gravestone Doji 墓碑十字/倒T十字简介：一日K线模式，开盘价与收盘价相同，上影线长，无下影线，预示底部反转integer = CDLGRAVESTONEDOJI(open, high, low, close) 1check_bar(tb.CDLGRAVESTONEDOJI, 1) CDLHAMMER - Hammer 函数名：CDLHAMMER名称：Hammer 锤头简介：一日K线模式，实体较短，无上影线，下影线大于实体长度两倍，处于下跌趋势底部，预示反转integer = CDLHAMMER(open, high, low, close) 1check_bar(tb.CDLHAMMER, 1) CDLHANGINGMAN - Hanging Man 函数名：CDLHANGINGMAN名称：Hanging Man 上吊线简介：一日K线模式，形状与锤子类似，处于上升趋势的顶部，预示着趋势反转integer = CDLHANGINGMAN(open, high, low, close) 1check_bar(tb.CDLHANGINGMAN, 1) CDLHARAMI - Harami Pattern 函数名：CDLHARAMI名称：Harami Pattern 母子线简介：二日K线模式，分多头母子与空头母子，两者相反，以多头母子为例，在下跌趋势中，第一日K线长阴，第二日开盘价收盘价在第一日价格振幅之内，为阳线，预示趋势反转，股价上升integer = CDLHARAMI(open, high, low, close) 1check_bar(tb.CDLHARAMI, 2) CDLHARAMICROSS - Harami Cross Pattern 函数名：CDLHARAMICROSS名称：Harami Cross Pattern 十字孕线简介：二日K线模式，与母子县类似，若第二日K线是十字线，便称为十字孕线，预示着趋势反转integer = CDLHARAMICROSS(open, high, low, close) 1check_bar(tb.CDLHARAMICROSS, 2) CDLHIGHWAVE - High-Wave Candle 函数名：CDLHIGHWAVE名称：High-Wave Candle 风高浪大线简介：三日K线模式，具有极长的上/下影线与短的实体，预示着趋势反转integer = CDLHIGHWAVE(open, high, low, close) 1check_bar(tb.CDLHIGHWAVE, 3) CDLHIKKAKE - Hikkake Pattern 函数名：CDLHIKKAKE名称：Hikkake Pattern 陷阱简介：三日K线模式，与母子类似，第二日价格在前一日实体范围内,第三日收盘价高于前两日，反转失败，趋势继续integer = CDLHIKKAKE(open, high, low, close) 1check_bar(tb.CDLHIKKAKE, 3) CDLHIKKAKEMOD - Modified Hikkake Pattern 函数名：CDLHIKKAKEMOD名称：Modified Hikkake Pattern 修正陷阱简介：三日K线模式，与陷阱类似，上升趋势中，第三日跳空高开；下跌趋势中，第三日跳空低开，反转失败，趋势继续integer = CDLHIKKAKEMOD(open, high, low, close) 1check_bar(tb.CDLHIKKAKEMOD, 3) CDLHOMINGPIGEON - Homing Pigeon 函数名：CDLHOMINGPIGEON名称：Homing Pigeon 家鸽简介：二日K线模式，与母子线类似，不同的的是二日K线颜色相同，第二日最高价、最低价都在第一日实体之内，预示着趋势反转integer = CDLHOMINGPIGEON(open, high, low, close) 1check_bar(tb.CDLHOMINGPIGEON, 2) CDLIDENTICAL3CROWS - Identical Three Crows 函数名：CDLIDENTICAL3CROWS名称：Identical Three Crows 三胞胎乌鸦简介：三日K线模式，上涨趋势中，三日都为阴线，长度大致相等，每日开盘价等于前一日收盘价，收盘价接近当日最低价，预示价格下跌integer = CDLIDENTICAL3CROWS(open, high, low, close) 1check_bar(tb.CDLIDENTICAL3CROWS, 3) CDLINNECK - In-Neck Pattern 函数名：CDLINNECK名称：In-Neck Pattern 颈内线简介：二日K线模式，下跌趋势中，第一日长阴线，第二日开盘价较低，收盘价略高于第一日收盘价，阳线，实体较短，预示着下跌继续integer = CDLINNECK(open, high, low, close) 1check_bar(tb.CDLINNECK, 2) CDLINVERTEDHAMMER - Inverted Hammer 函数名：CDLINVERTEDHAMMER名称：Inverted Hammer 倒锤头简介：一日K线模式，上影线较长，长度为实体2倍以上，无下影线，在下跌趋势底部，预示着趋势反转integer = CDLINVERTEDHAMMER(open, high, low, close) 1check_bar(tb.CDLINVERTEDHAMMER, 1) CDLKICKING - Kicking 函数名：CDLKICKING名称：Kicking 反冲形态简介：二日K线模式，与分离线类似，两日K线为秃线，颜色相反，存在跳空缺口integer = CDLKICKING(open, high, low, close) 1check_bar(tb.CDLKICKING, 2) CDLKICKINGBYLENGTH - Kicking - bull/bear determined by the longer marubozu 函数名：CDLKICKINGBYLENGTH名称：Kicking - bull/bear determined by the longer marubozu 由较长缺影线决定的反冲形态简介：二日K线模式，与反冲形态类似，较长缺影线决定价格的涨跌integer = CDLKICKINGBYLENGTH(open, high, low, close) 1check_bar(tb.CDLKICKINGBYLENGTH, 2) CDLLADDERBOTTOM - Ladder Bottom 函数名：CDLLADDERBOTTOM名称：Ladder Bottom 梯底简介：五日K线模式，下跌趋势中，前三日阴线，开盘价与收盘价皆低于前一日开盘、收盘价，第四日倒锤头，第五日开盘价高于前一日开盘价，阳线，收盘价高于前几日价格振幅，预示着底部反转integer = CDLLADDERBOTTOM(open, high, low, close) 1check_bar(tb.CDLLADDERBOTTOM, 5) CDLLONGLEGGEDDOJI - Long Legged Doji 函数名：CDLLONGLEGGEDDOJI名称：Long Legged Doji 长脚十字简介：一日K线模式，开盘价与收盘价相同居当日价格中部，上下影线长，表达市场不确定性integer = CDLLONGLEGGEDDOJI(open, high, low, close) 1check_bar(tb.CDLLONGLEGGEDDOJI, 1) CDLLONGLINE - Long Line Candle 函数名：CDLLONGLINE名称：Long Line Candle 长蜡烛简介：一日K线模式，K线实体长，无上下影线integer = CDLLONGLINE(open, high, low, close) 1check_bar(tb.CDLLONGLINE, 1) CDLMARUBOZU - Marubozu 函数名：CDLMARUBOZU名称：Marubozu 光头光脚/缺影线简介：一日K线模式，上下两头都没有影线的实体，阴线预示着熊市持续或者牛市反转，阳线相反integer = CDLMARUBOZU(open, high, low, close) 1check_bar(tb.CDLMARUBOZU, 1) CDLMATCHINGLOW - Matching Low 函数名：CDLMATCHINGLOW名称：Matching Low 相同低价简介：二日K线模式，下跌趋势中，第一日长阴线，第二日阴线，收盘价与前一日相同，预示底部确认，该价格为支撑位integer = CDLMATCHINGLOW(open, high, low, close) 1check_bar(tb.CDLMATCHINGLOW, 2) CDLMATHOLD - Mat Hold 函数名：CDLMATHOLD名称：Mat Hold 铺垫简介：五日K线模式，上涨趋势中，第一日阳线，第二日跳空高开影线，第三、四日短实体影线，第五日阳线，收盘价高于前四日，预示趋势持续integer = CDLMATHOLD(open, high, low, close, penetration=0) 1check_bar(tb.CDLMATHOLD, 5) CDLMORNINGDOJISTAR - Morning Doji Star 函数名：CDLMORNINGDOJISTAR名称：Morning Doji Star 十字晨星简介：三日K线模式，基本模式为晨星，第二日K线为十字星，预示底部反转integer = CDLMORNINGDOJISTAR(open, high, low, close, penetration=0) 1check_bar(tb.CDLMORNINGDOJISTAR, 3) CDLMORNINGSTAR - Morning Star 函数名：CDLMORNINGSTAR名称：Morning Star 晨星简介：三日K线模式，下跌趋势，第一日阴线，第二日价格振幅较小，第三天阳线，预示底部反转integer = CDLMORNINGSTAR(open, high, low, close, penetration=0) 1check_bar(tb.CDLMORNINGSTAR, 3) CDLONNECK - On-Neck Pattern 函数名：CDLONNECK名称：On-Neck Pattern 颈上线简介：二日K线模式，下跌趋势中，第一日长阴线，第二日开盘价较低，收盘价与前一日最低价相同，阳线，实体较短，预示着延续下跌趋势integer = CDLONNECK(open, high, low, close) 1check_bar(tb.CDLONNECK, 2) CDLPIERCING - Piercing Pattern 函数名：CDLPIERCING名称：Piercing Pattern 刺透形态简介：两日K线模式，下跌趋势中，第一日阴线，第二日收盘价低于前一日最低价，收盘价处在第一日实体上部，预示着底部反转integer = CDLPIERCING(open, high, low, close) 1check_bar(tb.CDLPIERCING, 2) CDLRICKSHAWMAN - Rickshaw Man 函数名：CDLRICKSHAWMAN名称：Rickshaw Man 黄包车夫简介：一日K线模式，与长腿十字线类似，若实体正好处于价格振幅中点，称为黄包车夫integer = CDLRICKSHAWMAN(open, high, low, close) 1check_bar(tb.CDLRICKSHAWMAN, 1) CDLRISEFALL3METHODS - Rising/Falling Three Methods 函数名：CDLRISEFALL3METHODS名称：Rising/Falling Three Methods 上升/下降三法简介： 五日K线模式，以上升三法为例，上涨趋势中，第一日长阳线，中间三日价格在第一日范围内小幅震荡，第五日长阳线，收盘价高于第一日收盘价，预示股价上升integer = CDLRISEFALL3METHODS(open, high, low, close) 1check_bar(tb.CDLRISEFALL3METHODS, 5) CDLSEPARATINGLINES - Separating Lines 函数名：CDLSEPARATINGLINES名称：Separating Lines 分离线简介：二日K线模式，上涨趋势中，第一日阴线，第二日阳线，第二日开盘价与第一日相同且为最低价，预示着趋势继续integer = CDLSEPARATINGLINES(open, high, low, close) 1check_bar(tb.CDLSEPARATINGLINES, 2) CDLSHOOTINGSTAR - Shooting Star 函数名：CDLSHOOTINGSTAR名称：Shooting Star 射击之星简介：一日K线模式，上影线至少为实体长度两倍，没有下影线，预示着股价下跌integer = CDLSHOOTINGSTAR(open, high, low, close) 1check_bar(tb.CDLSHOOTINGSTAR, 1) CDLSHORTLINE - Short Line Candle 函数名：CDLSHORTLINE名称：Short Line Candle 短蜡烛简介：一日K线模式，实体短，无上下影线integer = CDLSHORTLINE(open, high, low, close) 1check_bar(tb.CDLSHORTLINE, 1) CDLSPINNINGTOP - Spinning Top 函数名：CDLSPINNINGTOP名称：Spinning Top 纺锤简介：一日K线，实体小integer = CDLSPINNINGTOP(open, high, low, close) 1check_bar(tb.CDLSPINNINGTOP, 1) CDLSTALLEDPATTERN - Stalled Pattern 函数名：CDLSTALLEDPATTERN名称：Stalled Pattern 停顿形态简介：三日K线模式，上涨趋势中，第二日长阳线，第三日开盘于前一日收盘价附近，短阳线，预示着上涨结束integer = CDLSTALLEDPATTERN(open, high, low, close) 1check_bar(tb.CDLSTALLEDPATTERN, 3) CDLSTICKSANDWICH - Stick Sandwich 函数名：CDLSTICKSANDWICH名称：Stick Sandwich 条形三明治简介：三日K线模式，第一日长阴线，第二日阳线，开盘价高于前一日收盘价，第三日开盘价高于前两日最高价，收盘价于第一日收盘价相同integer = CDLSTICKSANDWICH(open, high, low, close) 1check_bar(tb.CDLSTICKSANDWICH, 3) CDLTAKURI - Takuri (Dragonfly Doji with very long lower shadow) 函数名：CDLTAKURI名称：Takuri (Dragonfly Doji with very long lower shadow) 探水竿简介：一日K线模式，大致与蜻蜓十字相同，下影线长度长integer = CDLTAKURI(open, high, low, close) 1check_bar(tb.CDLTAKURI, 1) CDLTASUKIGAP - Tasuki Gap 函数名：CDLTASUKIGAP名称：Tasuki Gap 跳空并列阴阳线简介：三日K线模式，分上涨和下跌，以上升为例，前两日阳线，第二日跳空，第三日阴线，收盘价于缺口中，上升趋势持续integer = CDLTASUKIGAP(open, high, low, close) 1check_bar(tb.CDLTASUKIGAP, 3) CDLTHRUSTING - Thrusting Pattern 函数名：CDLTHRUSTING名称：Thrusting Pattern 插入简介：二日K线模式，与颈上线类似，下跌趋势中，第一日长阴线，第二日开盘价跳空，收盘价略低于前一日实体中部，与颈上线相比实体较长，预示着趋势持续integer = CDLTHRUSTING(open, high, low, close) 1check_bar(tb.CDLTHRUSTING, 2) CDLTRISTAR - Tristar Pattern 函数名：CDLTRISTAR名称：Tristar Pattern 三星简介：三日K线模式，由三个十字组成，第二日十字必须高于或者低于第一日和第三日，预示着反转integer = CDLTRISTAR(open, high, low, close) 1check_bar(tb.CDLTRISTAR, 3) CDLUNIQUE3RIVER - Unique 3 River 函数名：CDLUNIQUE3RIVER名称：Unique 3 River 奇特三河床简介：三日K线模式，下跌趋势中，第一日长阴线，第二日为锤头，最低价创新低，第三日开盘价低于第二日收盘价，收阳线，收盘价不高于第二日收盘价，预示着反转，第二日下影线越长可能性越大integer = CDLUNIQUE3RIVER(open, high, low, close) 1check_bar(tb.CDLUNIQUE3RIVER, 3) CDLUPSIDEGAP2CROWS - Upside Gap Two Crows 函数名：CDLUPSIDEGAP2CROWS名称：Upside Gap Two Crows 向上跳空的两只乌鸦简介：三日K线模式，第一日阳线，第二日跳空以高于第一日最高价开盘，收阴线，第三日开盘价高于第二日，收阴线，与第一日比仍有缺口integer = CDLUPSIDEGAP2CROWS(open, high, low, close) 1check_bar(tb.CDLUPSIDEGAP2CROWS, 3) CDLXSIDEGAP3METHODS - Upside/Downside Gap Three Methods 函数名：CDLXSIDEGAP3METHODS名称：Upside/Downside Gap Three Methods 上升/下降跳空三法简介：五日K线模式，以上升跳空三法为例，上涨趋势中，第一日长阳线，第二日短阳线，第三日跳空阳线，第四日阴线，开盘价与收盘价于前两日实体内，第五日长阳线，收盘价高于第一日收盘价，预示股价上升integer = CDLXSIDEGAP3METHODS(open, high, low, close) 1check_bar(tb.CDLXSIDEGAP3METHODS, 5) 使用案例下面写一个 demo，追踪标的在指定日期形成的K线模式。 1234567891011# 检查某标的在某日形成的形态，返回形态描述def discern_pattern(security, date): from talib import abstract pattern_function = tb.get_function_groups()['Pattern Recognition'] for name in pattern_function: func = abstract.Function(name) price = get_price(security, end_date=date, count=100, skip_paused=True)[['open', 'high', 'low', 'close']] signal_series = func(price) if signal_series[-1] != 0: yield func.info['display_name'] 123456# 测试security_list = get_all_securities(date='2014-08-11').index.tolist()np.random.shuffle(security_list)for security in security_list[0: 10]: result = discern_pattern(security, '2014-08-11') print(security, list(result)) 603111.XSHG []600428.XSHG []300096.XSHE [‘Hikkake Pattern’]002392.XSHE [‘Belt-hold’, ‘Closing Marubozu’, ‘Long Line Candle’, ‘Marubozu’]601880.XSHG []002292.XSHE [‘Three Outside Up/Down’, ‘Belt-hold’]600360.XSHG [‘Belt-hold’, ‘Engulfing Pattern’, ‘Long Line Candle’]001696.XSHE [‘Closing Marubozu’, ‘Hikkake Pattern’]002584.XSHE []600276.XSHG [‘Three Inside Up/Down’, ‘Belt-hold’, ‘Closing Marubozu’, ‘Hikkake Pattern’, ‘Long Line Candle’, ‘Marubozu’]","categories":[{"name":"量化","slug":"量化","permalink":"http://yoursite.com/categories/量化/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"},{"name":"talib","slug":"talib","permalink":"http://yoursite.com/tags/talib/"},{"name":"k线形态","slug":"k线形态","permalink":"http://yoursite.com/tags/k线形态/"}]}]}